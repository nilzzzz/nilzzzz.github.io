I"B
<p><a href="http://acm.hrbust.edu.cn/problems">oj-acm专项分类练习</a></p>
<h3 id="分治算法">分治算法</h3>
<h3 id="一基本概念">一、基本概念</h3>
<p>在计算机科学中，分治法是一种很重要的算法。字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，再把子问题分成更小的子问题……直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。这个技巧是很多高效算法的基础，如排序算法(快速排序，归并排序)，傅立叶变换(快速傅立叶变换)……
    任何一个可以用计算机求解的问题所需的计算时间都与其规模有关。问题的规模越小，越容易直接求解，解题所需的计算时间也越少。例如，对于n个元素的排序问题，当n=1时，不需任何计算。n=2时，只要作一次比较即可排好序。n=3时只要作3次比较即可，…。而当n较大时，问题就不那么容易处理了。要想直接解决一个规模较大的问题，有时是相当困难的。</p>
<h3 id="二基本思想及策略">二、基本思想及策略</h3>
<p><strong>分治法</strong>的设计思想是：将一个难以直接解决的大问题，分割成一些规«br/&gt;模较小的相同问题，以便各个击破，分而治之。<br />
   <strong>分治策略</strong>是：对于一个规模为n的问题，若该问题可以容易地解决<br />（比如说规模n较小）则直接解决，否则将其分解为k个规模较小的子<br />问题，这些子问题互相独立且与原问题形式相同，递归地解这些子<br />问题，然后将各子问题的解合并得到原问题的解。<br />这种算法设计策略叫做分治法。<br />
   如果原问题可分割成k个子问题,1&lt;k≤n，<br />
   且这些子问题都可解并可利用这些子问题的解求出原问题的解，<br />那么这种分治法就是可行的。<br />由分治法产生的子问题往往是原问题的较小模式，<br />这就为使用递归技术提供了方便。在这种情况下，反复应用分治手段，<br />可以使子问题与原问题类型一致而其规模却不断缩小，最终使子问题缩小到很容易直接求出其解。<br />这自然导致递归过程的产生。<br />分治与递归像一对孪生兄弟，经常同时应用在算法设计之中，并由此产生许多高效算法。<br /></p>
<h3 id="三分治法适用的情况">三、分治法适用的情况</h3>
<p>分治法所能解决的问题一般具有以下几个特征：<br /></p>
:ET